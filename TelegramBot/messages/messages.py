import random


class Messages:
    class Auth:
        NO_AUTH = "[–ü—Ä–∞–≤–∏–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏](https://github.com/Faridik/Carolyn/wiki/%F0%9F%A6%B8%E2%80%8D%E2%99%82%EF%B8%8F-%D0%90%D0%B2%D1%82%D0%BE%D1%80%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F)"
        START = "üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è..."
        NO_ACCESS = "‚õî –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞"

        @staticmethod
        def hello(data):
            name = data.get("name", "—Å—Ç—É–¥–µ–Ω—Ç")
            return f"–ü—Ä–∏–≤–µ—Ç, {name} üëã"

        @staticmethod
        def failure(err: str):
            cases = {
                "StudentNotFound": "‚õî –°—Å—ã–ª–∫–∞ –±–æ–ª—å—à–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç",
                "StudentAlreadyAuthed": "‚õî –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ —É–∂–µ –ø—Ä–æ—à–ª–∞",
                "AnotherStudentAlreadyAuthed": "üò® –ö—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–π —É–∂–µ –∑–µ—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ",
            }
            return cases.get(err, "üòü –í–æ–∑–Ω–∏–∫–ª–∏ –Ω–µ–ø–æ–ª–∞–¥–∫–∏")

    class Assignments:
        START = "üëÄ –ü–æ—Å–º–æ—Ç—Ä–∏–º (~3—Å) ..."
        SELECT_COURSE = "üëá –í—ã–±–µ—Ä–∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É"
        SELECT_ASSNT = "üëá –í—ã–±–µ—Ä–∏ —Ä–∞–±–æ—Ç—É"
        END = "üòâ –í—Å–µ–≥–æ –Ω–∞–∏–ª—É—á—à–µ–≥–æ"
        TIMEOUT = "üïõ –í—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞ –≤—ã—à–ª–æ"

        @staticmethod
        def get(name: str, assignment: list, how_to_display: str, notes: str):
            is_float, n_cols, n_rows = how_to_display.split(',')
            n_cols, n_rows = int(n_cols), int(n_rows)
            summary = f'<b>{name}</b>:\n'
            if is_float == 'z':
                d = {0 : '‚ùé', 1 : '‚úÖ'}
                for item in range(0, len(assignment), n_cols):
                    summary += ''.join(list(map(d.get, 
                        assignment[item : item + n_cols]))) + '\n'
            elif is_float == 'r':
                to_str = lambda x: f'{x:.2f}'
                for item in range(0, len(assignment), n_cols):
                    summary += ' '.join(list(map(to_str,
                        assignment[item: item + n_cols]))) + '\n'
                summary += f'Œ£: {to_str(sum(assignment))}\n'
            summary += f"\n{notes}"
            return summary

        @staticmethod
        def timeit(t: float):
            return f"‚è± –ü–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –∑–∞ {t:.2f}—Å"

    class Spreadsheets:
        pass

    class Stickers:
        # –í–æ—Ä–æ–±–µ–π –ø–∞–≤–ª–∏–∫ —Å –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫–æ–º –∏ –Ω–∞–¥–ø–∏—Å—å—é "–ø–æ–∑–æ—Ä"
        POZOR = (
            "CAACAgIAAxkBAAEm1RhhBZg-2D6NypUeTsnbToD8_LMFTAACuUcAAulVBRjfnofQTkeMnCAE"
        )
        # –∫–æ—Ç –°–∏–º–∞ –≤ –ø–µ—Ç–ª–µ –ø–ª–∞—á–µ—Ç –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∞–ª–µ—Ü –≤–≤–µ—Ä—Ö
        ROPE = (
            "CAACAgIAAxkBAAEm1SFhBZjLaZgFIkvyxfBmAplwUWQFwwACBS0AAulVBRiIaSQ42WLoyyAE"
        )
        # –ê–∫–∏–æ —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ –±—Ä–æ–∫–∫–æ–ª–∏
        BROCCOLI = (
            "CAACAgIAAxkBAAEm1SVhBZkd24Dy2B_wYSCi6UrNuUjgwQACEUkAAulVBRiykDzrzywbmiAE"
        )
        # –Ø–Ω –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∞–ª–µ—Ü –≤–Ω–∏–∑
        THUMB_DOWN = (
            "CAACAgIAAxkBAAEm1SthBZlcos0_TbJo8W7mAcqGLNAh2wACJ5cAAp7OCwABDddMclD7Tf8gBA"
        )
        # –¢–∏–≥—Ä –∑–∞–∫–∞—Ç—ã–≤–∞–µ—Ç –≥–ª–∞–∑–∞
        EYES_UP = (
            "CAACAgEAAxkBAAEm1TBhBZmIZTrwzhGSzC47rNFbewQe6QAC4gADOA6CEeTgk4YIcTeWIAQ"
        )
        # –ù—É—Ç—Ä–∏ –±–æ–ª—å—à–∏–º–∏ –≥–ª–∞–∑–∞–º–∏ –∏ –Ω–∞–¥–ø–∏—Å—å—é "–ø–∏–ø–µ—Ü"
        PPTS = (
            "CAACAgIAAxkBAAEm1TZhBZnNVwLXmrbZwvdGjxiSwefzDAACn0sAAulVBRhECmBPSGCXHSAE"
        )
        # –ü–æ–ø—É–≥–∞–π –ö–µ–Ω—Ç —Å –Ω–µ–¥–æ–≤–æ–ª—å–Ω–æ–π –º–æ—Ä–¥–∞—Ö–æ–π
        GRUMPY_KENT = (
            "CAACAgIAAxkBAAEm1UBhBZn1gXmRfxaK_RqFTj1aFxLY-gACy0EAAulVBRhgQdlH2rd0uyAE"
        )
        # wojak
        WOJAK = (
            "CAACAgIAAxkBAAEm1UJhBZpfHNYVT_ZLrxUpyi8qRLWJGgACPAADB7lDCi2YrzAEyxJeIAQ"
        )
        # –õ—ç—Ç–∏—à–Ω—ã–π –∫–æ—Ç–∏–∫ –∏ –Ω–∞–¥–ø–∏—Å—å "–û–ô"
        OOPS = (
            "CAACAgIAAxkBAAEm1URhBZp2li7w2E1M6PirG7UnqLOc2QACSxEAAlTE4UoR1Olz8RANZCAE"
        )
        # –ú–µ–º "–æ–ø –∞—Ö–∞—Ö –Ω–µ–ª–æ–≤–∫–æ –≤—ã—à–ª–æ"
        NELOVKO = (
            "CAACAgIAAxkBAAEm1UZhBZqZ94SFa1e6d-Zy5I-6_SC_fQACgwgAAh8MqEiLbHl9nugoYSAE"
        )
        # –ü–æ–ø—É–≥–∞–π —Å–º–æ—Ç—Ä–∏—Ç –≤ –∑–µ—Ä–∫–∞–ª–æ "–ø–æ—Å–º–æ—Ç—Ä–∏ —á—Ç–æ —Å —Ç–æ–±–æ–π —Å—Ç–∞–ª–æ"
        MIRROR = (
            "CAACAgIAAxkBAAEm1VFhBZudma_FmFhybGgXikz3csc0BQAC2UEAAulVBRgkdje995ir7iAE"
        )
        # –ü–æ–ø—É–≥–∞–π —Å —Å–∏–≥–∞—Ä–µ—Ç–æ–π
        CIG = "CAACAgIAAxkBAAEm1VZhBZv6p7GsHS6wcyt2mCXoHJCo-wAC0UEAAulVBRghLLSQAcU6rSAE"
        # –ü–æ–ø—É–≥–∞–π –∏ –ø–µ—Å–æ–∫
        SAND = (
            "CAACAgIAAxkBAAEm1VhhBZwbw83_UVS8A5Crsf3EVAABvWIAAshBAALpVQUYl51K7ci-ClIgBA"
        )
        # –ê–∫–∏–æ –ø–∞–¥–∞–µ—Ç –≤ –æ–±–º–æ—Ä–æ–∫
        PANIC = (
            "CAACAgIAAxkBAAEm1VxhBZxwqRUJmVXDtzmsPJUIIGJgegACB0kAAulVBRiMI-hzK3GcKiAE"
        )
        # –≠–Ω–∏–∫–µ–π –Ω–∞–¥–ø–∏—Å—å "—É–º–µ—Ä"
        DEAD = (
            "CAACAgIAAxkBAAEm1aRhBaWXRb_tcI03O1onx0jW0bHmuAACejcAAulVBRi1oSUXeBATmiAE"
        )

        @classmethod
        def bad(self):
            """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∏–∫–µ—Ä —Å –≥—Ä—É—Å—Ç–Ω—ã–º —Å–º—ã—Å–ª–æ–º."""
            return random.choice(
                [
                    self.POZOR,
                    self.ROPE,
                    self.BROCCOLI,
                    self.THUMB_DOWN,
                    self.EYES_UP,
                    self.PPTS,
                    self.GRUMPY_KENT,
                    self.WOJAK,
                    self.OOPS,
                    self.NELOVKO,
                    self.MIRROR,
                    self.CIG,
                    self.SAND,
                    self.PANIC,
                ]
            )
